/* Optionally, if you prefer not to import via globals.css, remove the following @import 
   and instead add these link tags to the <head> of your HTML:
   
   <link rel="preconnect" href="https://fonts.googleapis.com">
   <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
   <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
*/
@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Root variables for light theme */
:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 246, 244, 242;
  --background-end-rgb: 246, 244, 242;
}

/* Dark theme overrides - pure black and gray shades */
.dark {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 10, 10, 10; /* Near-black */
  --background-end-rgb: 10, 10, 10;
}

html,
body {
  color: #2b2b2b;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    ) rgb(var(--background-start-rgb));
}

/* Dark mode text color override */
.dark body {
  color: rgb(var(--foreground-rgb));
}

/* Roboto Slab Font Options */

/* Thin 100 */
.roboto-slab-thin {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 100;
  font-style: normal;
}

/* ExtraLight 200 */
.roboto-slab-extralight {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 200;
  font-style: normal;
}

/* Light 300 */
.roboto-slab-light {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 300;
  font-style: normal;
}

/* Regular 400 */
.roboto-slab-regular {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

/* Medium 500 */
.roboto-slab-medium {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 500;
  font-style: normal;
}

/* SemiBold 600 */
.roboto-slab-semibold {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 600;
  font-style: normal;
}

/* Bold 700 */
.roboto-slab-bold {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 700;
  font-style: normal;
}

/* ExtraBold 800 */
.roboto-slab-extrabold {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 800;
  font-style: normal;
}

/* Black 900 */
.roboto-slab-black {
  font-family: "Roboto Slab", serif;
  font-optical-sizing: auto;
  font-weight: 900;
  font-style: normal;
}

/* Custom text color classes for shades of gray */
.text-gray-verylight {
  color: #c2c2c2;
}

.text-gray-light {
  color: #888888;
}

.text-gray-medium {
  color: #626262;
}

.text-gray-semidark {
  color: #494949;
}

.text-gray-dark {
  color: #272727;
}

.text-gray-verydark {
  color: #1a1a1a;
}

.text-gray-black {
  color: #0a0a0a;
}

/* Custom text size utilities */
.text-xxxsm {
  font-size: 0.65rem; /* 10.4px */
}

.text-xxsm {
  font-size: 0.75rem; /* 12px */
}

.text-xsm {
  font-size: 0.8rem; /* 13px */
}

.text-sm {
  font-size: 0.875rem; /* 14px */
}

.text-base {
  font-size: 0.95rem; /* 15.2px */
}

.text-lg {
  font-size: 1.125rem; /* 18px */
}

.text-xl {
  font-size: 1.25rem; /* 20px */
}

.text-2xl {
  font-size: 1.5rem; /* 24px */
}

.text-3xl {
  font-size: 1.875rem; /* 30px */
}

.text-4xl {
  font-size: 2.25rem; /* 36px */
}

.text-5xl {
  font-size: 3rem; /* 48px */
}

.text-6xl {
  font-size: 3.75rem; /* 60px */
}

/* Line height utilities */
.leading-none {
  line-height: 1;
}

.leading-tight {
  line-height: 1.25;
}

.leading-snug {
  line-height: 1.375;
}

.leading-normal {
  line-height: 1.5;
}

.leading-relaxed {
  line-height: 1.625;
}

.leading-loose {
  line-height: 2;
}

/* === Dark mode text utilities === */
.dark .text-gray-verylight {
  color: #494949;
}

.dark .text-gray-light {
  color: #626262;
}

.dark .text-gray-medium {
  color: #888888;
}

.dark .text-gray-semidark {
  color: #c2c2c2;
}

.dark .text-gray-dark {
  color: #e0e0e0;
}

.dark .text-gray-verydark {
  color: #f0f0f0;
}

.dark .text-gray-black {
  color: #ffffff;
}

/* === Dark mode background overrides === */
.dark .bg-white {
  background-color: #0a0a0a;
}

.dark .bg-gray-50 {
  background-color: #151515;
}

.dark .bg-gray-100 {
  background-color: #202020;
}

.dark .bg-gray-200 {
  background-color: #2a2a2a;
}

.dark .bg-gray-300 {
  background-color: #353535;
}

.dark .bg-gray-400 {
  background-color: #404040;
}

.dark .bg-gray-500 {
  background-color: #505050;
}

.dark .bg-gray-600 {
  background-color: #606060;
}

.dark .bg-gray-700 {
  background-color: #707070;
}

.dark .bg-gray-800 {
  background-color: #121212;
}

.dark .bg-gray-900 {
  background-color: #0a0a0a;
}

/* === Dark mode border color overrides === */
.dark .border-gray-200 {
  border-color: #2a2a2a;
}

.dark .border-gray-300 {
  border-color: #353535;
}

.dark .border-gray-700 {
  border-color: #2a2a2a;
}

/* === Scrollbar color for dark mode === */
.dark ::-webkit-scrollbar-track {
  background-color: #151515;
}

.dark ::-webkit-scrollbar-thumb {
  background-color: #404040;
  border-radius: 10px;
}

.dark ::-webkit-scrollbar-thumb:hover {
  background-color: #505050;
}

/* 
   Base transition for all elements 
   All transitions are now controlled here with no extra "transition-all" in components.
*/
* {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: ease;
}

/* Transition timing for various element typesâ€”with delays removed */
html, body {
  transition-duration: 50ms;
  transition-delay: 0ms;
}

main, header, footer, nav, aside, section {
  transition-duration: 50ms;
  transition-delay: 0ms;
}

article, div, form {
  transition-duration: 50ms;
  transition-delay: 0ms;
}

button, a, input, select, textarea {
  transition-duration: 50ms;
  transition-delay: 0ms;
}

h1, h2, h3, h4, h5, h6, p, span, li {
  transition-duration: 50ms;
  transition-delay: 0ms;
}

/* Special elements with custom transitions */
.card, .panel, .sidebar {
  transition-duration: 50ms;
  transition-delay: 0ms;
}

/* For dramatic effect, add transform transitions to certain elements */
.card, .panel {
  transition-property: color, background-color, border-color, transform, box-shadow;
}

/* Ensure focus states have no delay */
:focus {
  transition-duration: 0ms !important;
  transition-delay: 0ms !important;
}

/* Target arrow spans in navigation to transition instantly */
span.inline-block.transform.transition-transform,
button span[class*="transform"],
button span[class*="rotate"],
button span.inline-block,
[class*="sidebar"] span.inline-block {
  transition-duration: 50ms !important;
  transition-delay: 0ms !important;
  transition-property: transform, color !important;
}

/* Additional specificity for direct targeting */
nav span.inline-block.transform {
  transition-duration: 50ms !important;
  transition-delay: 0ms !important;
}

/* Aggressive fallback */
.inline-block.transform.transition-transform.duration-500 {
  transition-duration: 50ms !important;
}

/* Override any transition timing specifically for rotation transforms */
.rotate-90, 
*[class*="rotate-"] {
  transition-duration: 50ms !important;
}
